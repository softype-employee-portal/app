{"version":3,"sources":["modules/employee/Employee.js","modules/employee/EmployeeModal.js","../node_modules/react-star-ratings/build/index.js","../node_modules/react-star-ratings/build/star-ratings.js","../node_modules/react-star-ratings/build/star.js","modules/profile/PerformanceReview.js","modules/performance-review/component/Questions.js","models/PerformanceReviewModel.js","modules/performance-review/PerformanceReviewModal.js"],"names":["EmployeeDetails","props","_process","loading","pending","uploading","match","employees","appState","employee","user","auth","dispatch","useDispatch","id","params","fileInput","useRef","useState","process","setProcess","setEmployee","selectedFile","setSelectedFile","setPreview","tab","setTab","reviews","setReviews","stateReviews","useSelector","state","performance_review","performance_reviews","_initProcess","key","val","shallowCopy","renderContent","checkNull","value","street","city","country","toCapitalize","includes","UploadButtonHandler","a","payload","FormData","append","employeeId","api","post","res","error","actionCreator","ActionTypes","TOGGLE_NOTIFICATION","type","message","updated","data","employee_information","UPDATE_EMPLOYEE","getReviews","empId","myReviews","filter","review","employee_reviewedId","toString","useEffect","idx","length","el","undefined","objectUrl","URL","createObjectURL","revokeObjectURL","to","className","setWidth","sm","path","mdiCircleMedium","color","isActive","colors","$green","$red","size","block","onClick","roleId","department_managerId","department_headId","isUpdate","retrieveEmployees","accountType","gutters","pic","url","cnf","API_URL_DEV","profile_img","fetch","method","then","ok","catch","err","console","log","style","backgroundImage","logoSm","backgroundSize","backgroundRepeat","backgroundPosition","maxHeight","height","width","border","accept","file","ref","hidden","onChange","e","target","files","current","click","disabled","map","_field","field","htmlFor","invalid","name","readOnly","placeholder","defaultErrors","firstname","lastname","middlename","birthdate","email","mobileno","role","gender","sss","phil_health_no","pag_ibig_no","defaultEmployee","EmployeeModal","modal","dialog","createEmployee","errors","setError","setDisabled","responseError","setResponseError","handleOnChange","event","_errors","Employee","JSON","parse","modalOnClose","onSubmit","ADD_EMPLOYEE","fetchEmployeeAccounts","toggle","renderFeedback","title","footer","isLoading","submit","checkRequired","RULES","required","nameRules","numberRules","ageRules","getAge","isValid","_","values","btnText","fluid","onConfirm","action","row","xs","APP_MESSAGES","INPUT_REQUIRED","ACCOUNT_ROLES","label","category","roles","_role","stringify","status","st","Object","defineProperty","exports","obj","_starRatings","require","_starRatings2","__esModule","default","Number","isInteger","isFinite","Math","floor","_createClass","defineProperties","i","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","prototype","_react2","_interopRequireDefault","_propTypes2","_star2","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","StarRatings","_React$Component","_ref","_temp","_this","this","_len","arguments","args","Array","_key","__proto__","getPrototypeOf","apply","concat","highestStarHovered","Infinity","fillId","random","toFixed","slice","hoverOverStar","starRating","setState","unHoverOverStar","subClass","superClass","create","constructor","setPrototypeOf","_inherits","stopColorStyle","stopColor","stopOpacity","ignoreInlineStyles","_props","starRatedColor","starEmptyColor","createElement","titleText","starRatingsStyle","starGradientStyle","x1","y1","x2","y2","offset","offsetValue","renderStars","get","position","boxSizing","display","zIndex","visibility","_props2","typeOfWidget","selectedRating","rating","hoveredRating","currentRating","formattedRating","parseFloat","String","starText","split","_this2","_props3","changeRating","numberOfStars","starDimension","starSpacing","starHoverColor","gradientPathName","svgIconPath","svgIconViewBox","index","isStarred","hoverMode","isHovered","isCurrentHoveredStar","isPartiallyFullStar","isFirstStar","isLastStar","Component","propTypes","number","isRequired","func","string","bool","defaultProps","_classnames2","Star","starContainerStyle","onMouseEnter","onMouseLeave","viewBox","starClasses","starSvgStyle","pathStyle","d","verticalAlign","paddingLeft","paddingRight","cursor","transition","transform","_props4","fill","_props5","isSelected","PerformanceReview","fields","_style","textAlign","QUESTIONS","renderRating","arr","$orange","fontSize","RATINGS","xl","items","itemsPerPageSelect","itemsPerPage","hover","pagination","noItemsViewSlot","scopedSlots","month_reviewed","item","whiteSpace","c1","criteria_1","c2","criteria_2","c3","criteria_3","c4","criteria_4","c5","criteria_5","reviewer","Questions","setRating","activeIndex","setActiveIndex","onSlideChange","element","rate","copyArray","setNewRating","direction","employee_reviewed","PerformanceReviewModal","authed","userId","PerformanceReviewModel","setReview","toggleIsLoading","toggleModal","submitReview","dispatchNotification","ADD_PERFORMANCE_REVIEW","performance_review_information","centered","btnTitle","hideCancelButton"],"mappings":"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","file":"static/js/10.05e77e9b.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CRow,\r\n  CCol,\r\n  CCardFooter,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n  CForm,\r\n  CImg,\r\n  CButton,\r\n  CSpinner,\r\n} from \"@coreui/react\";\r\nimport { config as cnf } from \"utils/config\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCreator, ActionTypes } from \"utils/actions\";\r\nimport {\r\n  shallowCopy,\r\n  checkNull,\r\n  toCapitalize,\r\n  getBaseUrl,\r\n} from \"utils/helpers\";\r\nimport NoData from \"reusable/NoData\";\r\nimport api from \"utils/api\";\r\nimport EmployeeModal from \"./EmployeeModal\";\r\nimport PerformanceReviewModal from \"modules/performance-review/PerformanceReviewModal\";\r\nimport PerformanceReview from \"modules/profile/PerformanceReview\";\r\nimport { setWidth } from \"utils/helpers\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport Icon from '@mdi/react'\r\nimport { mdiCircleMedium } from '@mdi/js';\r\nimport res from \"assets/img\";\r\nimport colors from \"assets/theme/colors\";\r\nconst EmployeeDetails = (props) => {\r\n  let _process = {\r\n    loading: false,\r\n    pending: false,\r\n    uploading: false,\r\n  };\r\n  const { match } = props;\r\n  const employees = props.appState.employee.employees;\r\n  const user = props.appState.auth.user;\r\n  const dispatch = useDispatch();\r\n  const { id } = match.params;\r\n  const fileInput = useRef();\r\n  const [process, setProcess] = useState(_process);\r\n  const [employee, setEmployee] = useState(null);\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [preview, setPreview] = useState();\r\n  const [tab, setTab] = useState(0)\r\n  const [reviews, setReviews] = useState([])\r\n  const stateReviews = useSelector(state => {\r\n    return state.appState.performance_review.performance_reviews;\r\n  })\r\n\r\n  const _initProcess = (key, val) => {\r\n    let _temp_process = shallowCopy(process);\r\n    _process[key] = val;\r\n    setProcess(_process);\r\n  };\r\n\r\n\r\n  const fields = [\r\n    [\"firstname\", \"middlename\", \"lastname\"],\r\n    [\"gender\", \"birthdate\", \"mobileno\", \"email\"],\r\n    [\"street\", \"city\", \"coutry\"],\r\n    [\"department\", \"role\", \"status\"],\r\n    // [\"SSS\", \"PHIL HEALTH\", \"PAG-IBIG\"],\r\n  ];\r\n\r\n  const renderContent = (key) => {\r\n    let val = checkNull(employee[key]);\r\n    switch (key) {\r\n      case \"address\":\r\n        return {\r\n          key,\r\n          value: `${checkNull(employee.street)} ,${checkNull(\r\n            employee.city\r\n          )} ,${checkNull(employee.country)} `,\r\n        };\r\n      case \"mobileno\":\r\n        return { key: \"Mobile No.\", value: val };\r\n      case \"status\":\r\n        return { key: toCapitalize(key), value: employee['isActive'] === 1 ? \"Active\" : \"Inactive\" };\r\n      default:\r\n        if (key.includes(\"name\")) {\r\n          val = toCapitalize(val);\r\n        }\r\n        return { key: toCapitalize(key), value: val };\r\n    }\r\n  };\r\n\r\n  const UploadButtonHandler = async () => {\r\n    //  call api upload\r\n    let payload = new FormData();\r\n    payload.append(\"file\", selectedFile);\r\n    payload.append(\"employee_id\", +employee.employeeId);\r\n    _initProcess(\"uploading\", true);\r\n    let res = await api.post(\"/update_profile/img\", payload, true);\r\n    _initProcess(\"uploading\", false);\r\n    if (!res.error) {\r\n      _initProcess(\"pending\", false);\r\n      let updated = res.data.employee_information;\r\n      setEmployee(updated);\r\n      dispatch(actionCreator(ActionTypes.UPDATE_EMPLOYEE, updated));\r\n    } else {\r\n      dispatch(actionCreator(ActionTypes.TOGGLE_NOTIFICATION, { type: 'error', message: res.message }));\r\n    }\r\n    return;\r\n  };\r\n  const FileInputChangeHandler = (e) => {\r\n    if (!e.target.files || e.target.files.length === 0) {\r\n      setSelectedFile(undefined);\r\n      _initProcess(\"pending\", false);\r\n      return;\r\n    }\r\n    _initProcess(\"pending\", true);\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  const getReviews = empId => {\r\n    let myReviews = stateReviews.filter(review => review.employee_reviewedId.toString() === empId.toString());\r\n    setReviews(myReviews)\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    for (let idx = 0; idx < employees.length; idx++) {\r\n      let el = employees[idx];\r\n      if (el.employeeId.toString() === id.toString()) {\r\n        setEmployee(el);\r\n        getReviews(el.employeeId)\r\n        break;\r\n      }\r\n    }\r\n    if (!selectedFile) {\r\n      _initProcess(\"pending\", false);\r\n      setPreview(undefined);\r\n      return;\r\n    }\r\n    const objectUrl = URL.createObjectURL(selectedFile);\r\n    setPreview(objectUrl);\r\n\r\n    // free memory when ever this component is unmounted\r\n    return () => URL.revokeObjectURL(objectUrl);\r\n  }, [selectedFile, employees, employee]);\r\n\r\n\r\n  if (user.employeeId.toString() === id) {\r\n    return <Redirect to=\"/myAccount\" />\r\n  }\r\n\r\n  // let url = `${getBaseUrl()}/file/images/${employee.profile_img}`\r\n\r\n  return employee ? (\r\n    <CRow className=\"justify-content-center\">\r\n      <CCol {...setWidth(\"12\")}>\r\n        <CCard>\r\n          <CCardHeader>\r\n            <CRow className=\"mb-2\">\r\n              <CCol sm=\"5\">\r\n                <h3>Employee {tab == 0 ? 'Information' : 'Reviews'}\r\n                  <sup>\r\n                    <Icon path={mdiCircleMedium} color={employee.isActive === 1 ? colors.$green : colors.$red} size={1} />\r\n                  </sup>\r\n                </h3>\r\n              </CCol>\r\n              <CCol sm=\"7\" className=\"d-none d-md-block\">\r\n                <div className=\"float-right\">\r\n                  {\r\n                    <CButton\r\n                      block\r\n                      onClick={() => {\r\n                        setTab(tab === 0 ? 1 : 0)\r\n                      }}\r\n                      color='primary'\r\n                    >\r\n                      View {tab == 1 ? 'Information' : 'Reviews'}\r\n                    </CButton>\r\n                  }\r\n                </div>\r\n                <div className=\"float-right px-2\">\r\n                  {\r\n                    (user.roleId === 1 || employee.department_managerId === user.employeeId || employee.department_headId === user.employeeId) &&\r\n                    <EmployeeModal\r\n                      isUpdate\r\n                      data={employee}\r\n                      retrieveEmployees={props.retrieveEmployees}\r\n                    />\r\n                  }\r\n                </div>\r\n                {\r\n                  user.accountType === 2 ?\r\n                    <div className=\"float-right mr-2\">\r\n                      {\r\n                        (employee.isActive === 1 || employee.department_managerId === user.employeeId || employee.department_headId === user.employeeId) && <PerformanceReviewModal {...{ user: employee }} />\r\n                      }\r\n                    </div>\r\n                    : \"\"\r\n                }\r\n\r\n              </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>{\r\n            tab === 0 ?\r\n              <CRow gutters={false} className=\"\">\r\n                <CCol {...setWidth(\"3\")} className=\"px-1 py-1 mr-3\">\r\n                  {(function () {\r\n                    let pic = false;\r\n                    let url = `${cnf.API_URL_DEV}/image/images/${employee.profile_img}`;\r\n                    fetch(url, { method: \"HEAD\" })\r\n                      .then((res) => {\r\n                        if (res.ok) {\r\n                          pic = true;\r\n                        }\r\n                      })\r\n                      .catch(err => console.log(err));\r\n                    return (\r\n                      <div\r\n                        style={{\r\n                          //\r\n                          backgroundImage: `url(${\r\n                            employee.profile_img\r\n                              ? pic\r\n                                ? url\r\n                                : res.logoSm\r\n                              : res.logoSm\r\n                            })`,\r\n                          backgroundSize: \"contain\",\r\n                          backgroundRepeat: \"no-repeat\",\r\n                          backgroundPosition: \"center\",\r\n                          maxHeight: \"200px\",\r\n                          height: \"200px\",\r\n                          width: \"100%\",\r\n                          border: \"1px solid dark\",\r\n                        }}\r\n                      ></div>\r\n                    );\r\n                  })()}\r\n                  <input\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    value={process.file}\r\n                    ref={fileInput}\r\n                    hidden\r\n                    onChange={FileInputChangeHandler}\r\n                  />\r\n                  <CButton\r\n                    onClick={() => {\r\n                      fileInput.current.click();\r\n                    }}\r\n                    className=\"mr-1 mt-3\"\r\n                    block\r\n                    disabled={employee.isActive !== 1 || process.uploading}\r\n                    color=\"primary\"\r\n                  >\r\n                    Change Profile Image\r\n                </CButton>\r\n\r\n                  <CButton\r\n                    onClick={UploadButtonHandler}\r\n                    className=\"mr-1 mt-3\"\r\n                    block\r\n                    disabled={\r\n                      (process.uploading && true) || (!process.pending && true)\r\n                    }\r\n                    color=\"primary\"\r\n                  >\r\n                    {process.uploading ? (\r\n                      <CSpinner color=\"secondary\" size=\"sm\" />\r\n                    ) : (\r\n                        \"Upload\"\r\n                      )}\r\n                  </CButton>\r\n                </CCol>\r\n                <CCol>\r\n                  <CForm>\r\n                    {fields.map((_field, idx) => {\r\n                      return (\r\n                        <CRow key={idx} gutters={false}>\r\n                          {_field.map((field) => {\r\n                            let val = renderContent(field).value;\r\n                            return (\r\n                              <CCol\r\n                                className=\"px-1\"\r\n                                {...setWidth((12 / _field.length).toString())}\r\n                                key={field}\r\n                              >\r\n                                <CFormGroup>\r\n                                  <CLabel htmlFor=\"name\">\r\n                                    {\" \"}\r\n                                    <strong>{renderContent(field).key} </strong>\r\n                                  </CLabel>\r\n                                  <CInput\r\n                                    id=\"text-input\"\r\n                                    invalid={field === 'status' && employee.isActive !== 1}\r\n                                    name=\"text-input\"\r\n                                    readOnly\r\n                                    value={val && val}\r\n                                    placeholder={!val ? \"UNSET\" : \"\"}\r\n                                  />\r\n                                </CFormGroup>\r\n                              </CCol>\r\n                            );\r\n                          })}\r\n                        </CRow>\r\n                      );\r\n                    })}\r\n                  </CForm>\r\n                </CCol>\r\n              </CRow>\r\n              : <PerformanceReview {...{ reviews }} />\r\n          }\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  ) : (\r\n      <NoData />\r\n    );\r\n};\r\n// }\r\n\r\nexport default EmployeeDetails;\r\n\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { CButton, CSelect, CRow, CCol, CContainer, CForm, CFormGroup, CLabel, CInput, CInvalidFeedback, CAlert, CSpinner } from '@coreui/react'\r\nimport { Modal, LoadingButton, ConfirmDialog } from 'reusable'\r\nimport { actionCreator, ActionTypes } from 'utils/actions'\r\nimport api from \"utils/api\";\r\nimport { APP_MESSAGES, ROLE, ACCOUNT_ROLES } from 'utils/constants/constant';\r\nimport { RULES, shallowCopy, getAge } from 'utils/helpers'\r\nimport { fetchEmployeeAccounts, retrieveEmployees } from 'utils/helpers/fetch';\r\nimport _ from 'lodash';\r\n\r\nconst defaultErrors = {\r\n  firstname: false,\r\n  lastname: false,\r\n  middlename: false,\r\n  birthdate: false,\r\n  email: false,\r\n  mobileno: false,\r\n  role: false,\r\n  // department: false,\r\n  gender: false,\r\n  street: false,\r\n  city: false,\r\n  country: false,\r\n  sss: false,\r\n  phil_health_no: false,\r\n  pag_ibig_no: false,\r\n\r\n}\r\nconst defaultEmployee = {\r\n  role: null,\r\n  accountType: null,\r\n  firstname: \"\",\r\n  lastname: \"\",\r\n  middlename: \"\",\r\n  gender: \"\",\r\n  mobileno: \"\",\r\n  birthdate: \"\",\r\n  email: \"\",\r\n  street: \"\",\r\n  city: \"\",\r\n  country: \"\",\r\n  sss: \"\",\r\n  phil_health_no: \"\",\r\n  pag_ibig_no: \"\",\r\n  isActive: 1\r\n\r\n}\r\n\r\nconst EmployeeModal = ({ isUpdate = false, data = null }) => {\r\n  let dispatch = useDispatch();\r\n  const modal = useRef();\r\n  const dialog = useRef();\r\n  const [employee, createEmployee] = useState(!data ? shallowCopy(defaultEmployee) : data)\r\n  const [errors, setError] = useState(defaultErrors)\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [responseError, setResponseError] = useState();\r\n\r\n  const handleOnChange = (event) => {\r\n    setResponseError('')\r\n    setError(defaultErrors)\r\n    let _errors = shallowCopy(errors)\r\n    let Employee = shallowCopy(employee)\r\n    let { name, value } = event.target\r\n    _errors[name] = false\r\n    if (name === \"role\") {\r\n      let { role, accountType } = JSON.parse(value)\r\n      Employee['role'] = role;\r\n      Employee[\"accountType\"] = +accountType;\r\n    } else {\r\n      Employee[name] = value;\r\n    }\r\n    createEmployee(Employee)\r\n  }\r\n\r\n  const validateInfo = (name, value) => {\r\n    const { ageRules, nameRules, numberRules, emailRules } = RULES\r\n    if (name === \"birthdate\") {\r\n      return ageRules(getAge(value))\r\n    }\r\n\r\n    if (['firstname', 'lastname'].includes(name)) {\r\n      return nameRules(value)\r\n    }\r\n\r\n    if (name === 'middlename' && value !== \"\") {\r\n      return nameRules(value)\r\n    } else {\r\n      return false\r\n    }\r\n\r\n    if (name === \"mobileno\") {\r\n      return numberRules(value)\r\n    }\r\n\r\n    if (name === \"email\") {\r\n      return emailRules(value)\r\n    }\r\n\r\n    if (['sss', 'phil_health_no', 'pag_ibig_no'].includes(name)) {\r\n      return false\r\n    }\r\n    return value !== \"\" || APP_MESSAGES.INPUT_REQUIRED;\r\n  }\r\n\r\n  // const addEmployee = async () => {\r\n  //     let res = await api.post(\"/create_employee\", employee)\r\n  //     if (!res.error) {\r\n  //         employee.id = res.data.id\r\n  //         dispatch(actionCreator(ActionTypes.ADD_EMPLOYEE, employee))\r\n  //     }\r\n  //     // else {\r\n  //     //     setError(res.message)\r\n  //     // }\r\n  // }\r\n  // const updateEmployee = async () => {\r\n  //     let res = await api.post(\"/create_employee\", employee)\r\n  //     if (!res.error) {\r\n  //         employee.id = res.data.id\r\n  //         dispatch(actionCreator(ActionTypes.ADD_EMPLOYEE, employee))\r\n  //     }\r\n  //     // else {\r\n  //     //     setError(res.message)\r\n  //     // }\r\n  // }\r\n\r\n  const modalOnClose = () => {\r\n    if (!isUpdate) {\r\n      createEmployee(defaultEmployee)\r\n    }\r\n    setError(defaultErrors)\r\n    setResponseError('');\r\n  }\r\n\r\n  const onSubmit = async () => {\r\n    setDisabled(true)\r\n    let path = isUpdate ? \"update_employee\" : \"create_employee\"\r\n    let payload = shallowCopy(employee)\r\n    if (isUpdate) {\r\n      payload[\"employeeId\"] = data.employeeId;\r\n    }\r\n    let res = await api.post(`/${path}`, payload)\r\n    if (!res.error) {\r\n      let fetched = await retrieveEmployees(dispatch);\r\n      if (fetched.error) {\r\n        dispatch(actionCreator(ActionTypes.ADD_EMPLOYEE, res.data.employee_information[0]))\r\n      }\r\n      await fetchEmployeeAccounts(dispatch)\r\n    } else {\r\n      setResponseError(res.message);\r\n    }\r\n    setDisabled(false)\r\n    modal.current.toggle()\r\n    modalOnClose();\r\n  }\r\n\r\n\r\n\r\n  const validate = () => {\r\n\r\n    let _errors = shallowCopy(defaultErrors)\r\n    let {\r\n      role,\r\n      firstname,\r\n      lastname,\r\n      middlename,\r\n      gender,\r\n      mobileno,\r\n      birthdate,\r\n      email,\r\n      city,\r\n      country,\r\n      pag_ibig_no,\r\n      phil_health_no,\r\n      sss\r\n    } = employee;\r\n    let checkRequired = val => RULES.required(val)\r\n    _errors['role'] = checkRequired(role);\r\n    _errors['firstname'] = RULES.nameRules(firstname);\r\n    _errors['lastname'] = RULES.nameRules(lastname);\r\n    _errors['gender'] = checkRequired(gender);\r\n    _errors['mobileno'] = RULES.numberRules(mobileno);\r\n    _errors['birthdate'] = RULES.ageRules(getAge(birthdate));\r\n    _errors['city'] = checkRequired(city);\r\n    _errors['country'] = checkRequired(country);\r\n    _errors['email'] = checkRequired(email);\r\n    _errors['middlename'] = false;\r\n    if (middlename.length) {\r\n      _errors['middlename'] = RULES.nameRules(middlename);\r\n    }\r\n    if (sss.length) {\r\n      _errors['sss'] = RULES.numberRules(sss);\r\n    }\r\n    if (phil_health_no.length) {\r\n      _errors['phil_health_no'] = RULES.numberRules(phil_health_no);\r\n    }\r\n    if (pag_ibig_no.length) {\r\n      _errors['pag_ibig_no'] = RULES.numberRules(pag_ibig_no);\r\n    }\r\n    setError(_errors)\r\n    let isValid = true;\r\n    _.values(_errors).map(err => {\r\n      if (typeof err == 'string') {\r\n        isValid = false\r\n      }\r\n    })\r\n    //valid\r\n    if (isValid) {\r\n      dialog.current.toggle()\r\n    }\r\n  }\r\n\r\n\r\n  const renderFeedback = (message) => {\r\n    return message !== false &&\r\n      <CInvalidFeedback className=\"help-block\">\r\n        {message}\r\n      </CInvalidFeedback>\r\n  }\r\n\r\n  return (\r\n    <Modal ref={modal} {...{\r\n      modalOnClose,\r\n      size: \"lg\",\r\n      title: isUpdate ? \"Update Details\" : \"Add Employee\",\r\n      color: \"warning\",\r\n      footer:\r\n        <>\r\n          <LoadingButton  {...{ isLoading: disabled, submit: validate, btnText: !isUpdate ? \"Submit\" : \"Update\" }} />\r\n          {/* <CButton\r\n                        disabled={disabled}\r\n                        onClick={validate}\r\n                        className=\"mr-1\"\r\n                        color=\"primary\">\r\n                        {\r\n                            disabled ? <CSpinner color=\"secondary\" size=\"sm\" /> : !isUpdate ? \"Submit\" : \"Update\"\r\n                        }\r\n                    </CButton> */}\r\n        </>\r\n    }}>\r\n\r\n      <CContainer fluid>\r\n        <ConfirmDialog\r\n          id=\"cutom_dialog\"\r\n          ref={dialog}\r\n          {...{\r\n            onConfirm: () => {\r\n              onSubmit();\r\n            },\r\n            title: \"Please confirm.\",\r\n          }}\r\n        ></ConfirmDialog>\r\n        <CRow>\r\n          <CCol sm=\"12\">\r\n            {responseError && responseError.length > 0 ? <CAlert color=\"danger justify-content-center text-align-center\">{responseError}</CAlert> : null}\r\n            <CForm action=\"\" method=\"post\" >\r\n              <CFormGroup row className=\"my-0\">\r\n                <CCol xs=\"4\">\r\n                  <CFormGroup>\r\n                    <CLabel>Firstname</CLabel>\r\n                    <CInput\r\n                      onChange={handleOnChange}\r\n                      name=\"firstname\"\r\n                      value={employee.firstname || \"\"}\r\n                      placeholder=\"Enter Firstname\"\r\n                      invalid={typeof errors.firstname !== 'boolean'}\r\n                    //valid={!errors.firstname} \r\n                    />\r\n                    {renderFeedback(errors.firstname)}\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"4\">\r\n                  <CFormGroup>\r\n                    <CLabel>Middlename</CLabel>\r\n                    <CInput\r\n                      onChange={handleOnChange}\r\n                      name=\"middlename\"\r\n                      value={employee.middlename || \"\"}\r\n                      placeholder=\"Enter Middlename\"\r\n                      invalid={typeof errors.middlename !== 'boolean'}\r\n                    />\r\n                    {renderFeedback(errors.middlename)}\r\n\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"4\">\r\n                  <CFormGroup>\r\n                    <CLabel>Lastname</CLabel>\r\n                    <CInput\r\n                      onChange={handleOnChange}\r\n                      name=\"lastname\"\r\n                      value={employee.lastname || \"\"}\r\n                      placeholder=\"Enter Lastname\"\r\n                      invalid={typeof errors.lastname !== 'boolean'}\r\n                    />\r\n                    {renderFeedback(errors.lastname)}\r\n\r\n                  </CFormGroup>\r\n                </CCol>\r\n              </CFormGroup>\r\n              <CFormGroup row className=\"my-0\">\r\n                <CCol xs=\"6\">\r\n                  <CFormGroup>\r\n                    <CLabel>Gender</CLabel>\r\n                    <CSelect onChange={handleOnChange}\r\n                      value={employee.gender}\r\n                      invalid={typeof errors.gender !== 'boolean'}\r\n                      name=\"gender\">\r\n                      {\r\n                        !employee.gender && <option value=\"\" hidden>Select Gender</option>\r\n                      }\r\n                      <option value='male'>Male</option>\r\n                      <option value='female'>Female</option>\r\n                    </CSelect>\r\n                    {renderFeedback(APP_MESSAGES.INPUT_REQUIRED)}\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"6\">\r\n                  <CFormGroup>\r\n                    <CLabel>Birthdate</CLabel>\r\n                    <CInput\r\n                      type='date'\r\n                      //valid={!errors.birthdate}\r\n                      onChange={handleOnChange}\r\n                      name=\"birthdate\"\r\n                      invalid={typeof errors.birthdate !== 'boolean'}\r\n                      onChange={handleOnChange}\r\n                      value={employee.birthdate || \"\"}\r\n                      placeholder=\"Enter Birthdate..\"\r\n                    />\r\n                    {renderFeedback(errors.birthdate)}\r\n                  </CFormGroup>\r\n                </CCol>\r\n              </CFormGroup>\r\n              <CFormGroup row className=\"my-0\">\r\n                <CCol xs=\"6\">\r\n                  <CFormGroup>\r\n                    <CLabel>Role</CLabel>\r\n                    <CSelect\r\n                      onChange={handleOnChange}\r\n                      name=\"role\"\r\n                      // value={employee.role || \"\"}\r\n                      invalid={typeof errors.role !== 'boolean'}\r\n                    >\r\n                      {\r\n                        !employee.role && <option value=\"\" hidden>Select Role</option>\r\n                      }\r\n\r\n                      {ACCOUNT_ROLES.map(role => {\r\n                        return (\r\n                          <optgroup label={role.category} key={role.category}>\r\n                            {\r\n                              role.roles.map((_role, idx) => {\r\n                                return (<option value={JSON.stringify({ role: _role, accountType: role.accountType })} key={idx} >{_role}</option>)\r\n                              })\r\n                            }\r\n                          </optgroup>)\r\n\r\n                      })}\r\n                    </CSelect>\r\n                    {renderFeedback(APP_MESSAGES.INPUT_REQUIRED)}\r\n                  </CFormGroup>\r\n                </CCol>\r\n                {/* <CCol xs=\"6\">\r\n                                    <CFormGroup>\r\n                                        <CLabel>Department</CLabel>\r\n                                        <CSelect onChange={handleOnChange}\r\n                                            value={employee.department}\r\n                                            invalid={ typeof errors.department !== false}\r\n                                            name=\"department\">\r\n                                            <option value=\"\" hidden>Select Department</option>\r\n                                            {\r\n                                                departments.map(dept => <option key={dept.department_id} value={dept.department_id}>{dept.department_name}</option>)\r\n                                            }\r\n\r\n                                        </CSelect>\r\n                                        {renderFeedback(APP_MESSAGES.INPUT_REQUIRED)}\r\n                                    </CFormGroup>\r\n                                </CCol> */}\r\n                <CCol xs=\"6\">\r\n                  <CFormGroup>\r\n                    <CLabel>Mobile Number</CLabel>\r\n                    <CInput\r\n                      invalid={typeof errors.mobileno !== 'boolean'}\r\n                      //valid={!errors.mobileno}\r\n                      onChange={handleOnChange}\r\n                      name=\"mobileno\"\r\n                      value={employee.mobileno}\r\n                      placeholder=\"Enter Mobile Number..\"\r\n\r\n                    />\r\n                    {renderFeedback(errors.mobileno)}\r\n                  </CFormGroup>\r\n                </CCol>\r\n              </CFormGroup>\r\n              <CFormGroup row className=\"my-0\">\r\n\r\n                <CCol xs=\"6\">\r\n                  <CFormGroup>\r\n                    <CLabel>Email</CLabel>\r\n                    <CInput\r\n                      onChange={handleOnChange}\r\n                      name=\"email\"\r\n                      //valid={!errors.email}\r\n                      value={employee.email || \"\"}\r\n                      invalid={typeof errors.email !== 'boolean'}\r\n                      placeholder=\"Enter Email..\"\r\n\r\n                    />\r\n                    {renderFeedback(errors.email)}\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"6\">\r\n                  <CFormGroup>\r\n                    <CLabel>Status</CLabel>\r\n                    <CSelect onChange={handleOnChange}\r\n                      value={employee.isActive}\r\n                      disabled={!isUpdate}\r\n                      name=\"isActive\">\r\n                      <option value=\"\" hidden>{isUpdate ? employee.isActive === 1 ? 'Active' : 'Inactive' : 'Select Status'}</option>\r\n                      {\r\n                        [{ status: 'Active', value: 1 },\r\n                        { status: 'Inctive', value: 0 }]\r\n                          .map(st => <option key={st.value} value={st.value}>{st.status}</option>)\r\n                      }\r\n                    </CSelect>\r\n                  </CFormGroup>\r\n                </CCol>\r\n              </CFormGroup>\r\n              <CFormGroup row className=\"my-0\">\r\n                <CCol xs=\"4\">\r\n                  <CFormGroup>\r\n                    <CLabel>Street</CLabel>\r\n                    <CInput\r\n                      onChange={handleOnChange}\r\n                      name=\"street\"\r\n                      //valid={!errors.street}\r\n                      invalid={typeof errors.street !== 'boolean'}\r\n                      value={employee.street || \"\"}\r\n                      placeholder=\"Enter Street..\"\r\n\r\n                    />\r\n                    {renderFeedback(APP_MESSAGES.INPUT_REQUIRED)}\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"4\">\r\n                  <CFormGroup>\r\n                    <CLabel>City</CLabel>\r\n                    <CInput\r\n                      onChange={handleOnChange}\r\n                      //valid={!errors.city}\r\n                      name=\"city\"\r\n                      invalid={typeof errors.city !== 'boolean'}\r\n                      value={employee.city || \"\"}\r\n                      placeholder=\"Enter City..\"\r\n\r\n                    />\r\n                    {renderFeedback(APP_MESSAGES.INPUT_REQUIRED)}\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"4\">\r\n                  <CFormGroup>\r\n                    <CLabel>Country</CLabel>\r\n                    <CInput\r\n                      onChange={handleOnChange}\r\n                      name=\"country\"\r\n                      //valid={!errors.country}\r\n                      invalid={typeof errors.country !== 'boolean'}\r\n                      value={employee.country || \"\"}\r\n                      placeholder=\"Enter Country..\"\r\n                    />\r\n                    {renderFeedback(APP_MESSAGES.INPUT_REQUIRED)}\r\n                  </CFormGroup>\r\n                </CCol>\r\n              </CFormGroup>\r\n              <CFormGroup row className=\"my-0 d-none\">\r\n                <CCol xs=\"4\">\r\n                  <CFormGroup>\r\n                    <CLabel>SSS NO.</CLabel>\r\n                    <CInput\r\n                      onChange={handleOnChange}\r\n                      name=\"sss\"\r\n                      invalid={typeof errors.sss !== 'boolean'}\r\n                      value={employee.sss || \"\"}\r\n                      placeholder=\"SSS NO.\"\r\n\r\n                    />\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"4\">\r\n                  <CFormGroup>\r\n                    <CLabel>PHIL HEALTH NO.</CLabel>\r\n                    <CInput\r\n                      onChange={handleOnChange}\r\n                      invalid={typeof errors.phil_health_no !== 'boolean'}\r\n                      name=\"phil_health_no\"\r\n                      value={employee.phil_health_no || \"\"}\r\n                      placeholder=\"PHIL HEALTH NO.\"\r\n\r\n                    />\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"4\">\r\n                  <CFormGroup>\r\n                    <CLabel>PAGIBIG NO.</CLabel>\r\n                    <CInput\r\n                      onChange={handleOnChange}\r\n                      invalid={typeof errors.pag_ibig_no !== 'boolean'}\r\n                      name=\"pag_ibig_no\"\r\n                      value={employee.pag_ibig_no || \"\"}\r\n                      placeholder=\"PAGIBIG NO.\"\r\n                    />\r\n                  </CFormGroup>\r\n                </CCol>\r\n              </CFormGroup>\r\n            </CForm>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default EmployeeModal;\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _starRatings = require('./star-ratings');\n\nvar _starRatings2 = _interopRequireDefault(_starRatings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// polyfill for ie\nNumber.isInteger = Number.isInteger || function (value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n};\n\nexports.default = _starRatings2.default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _star = require('./star');\n\nvar _star2 = _interopRequireDefault(_star);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar StarRatings = function (_React$Component) {\n  _inherits(StarRatings, _React$Component);\n\n  function StarRatings() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, StarRatings);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = StarRatings.__proto__ || Object.getPrototypeOf(StarRatings)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      highestStarHovered: -Infinity\n    }, _this.fillId = 'starGrad' + Math.random().toFixed(15).slice(2), _this.hoverOverStar = function (starRating) {\n      return function () {\n        _this.setState({\n          highestStarHovered: starRating\n        });\n      };\n    }, _this.unHoverOverStar = function () {\n      _this.setState({\n        highestStarHovered: -Infinity\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(StarRatings, [{\n    key: 'stopColorStyle',\n    value: function stopColorStyle(color) {\n      var stopColorStyle = {\n        stopColor: color,\n        stopOpacity: '1'\n      };\n      return this.props.ignoreInlineStyles ? {} : stopColorStyle;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          starRatedColor = _props.starRatedColor,\n          starEmptyColor = _props.starEmptyColor;\n\n\n      return _react2.default.createElement(\n        'div',\n        {\n          className: 'star-ratings',\n          title: this.titleText,\n          style: this.starRatingsStyle\n        },\n        _react2.default.createElement(\n          'svg',\n          {\n            className: 'star-grad',\n            style: this.starGradientStyle\n          },\n          _react2.default.createElement(\n            'defs',\n            null,\n            _react2.default.createElement(\n              'linearGradient',\n              { id: this.fillId, x1: '0%', y1: '0%', x2: '100%', y2: '0%' },\n              _react2.default.createElement('stop', { offset: '0%', className: 'stop-color-first', style: this.stopColorStyle(starRatedColor) }),\n              _react2.default.createElement('stop', { offset: this.offsetValue, className: 'stop-color-first', style: this.stopColorStyle(starRatedColor) }),\n              _react2.default.createElement('stop', { offset: this.offsetValue, className: 'stop-color-final', style: this.stopColorStyle(starEmptyColor) }),\n              _react2.default.createElement('stop', { offset: '100%', className: 'stop-color-final', style: this.stopColorStyle(starEmptyColor) })\n            )\n          )\n        ),\n        this.renderStars\n      );\n    }\n  }, {\n    key: 'starRatingsStyle',\n    get: function get() {\n      var starRatingsStyle = {\n        position: 'relative',\n        boxSizing: 'border-box',\n        display: 'inline-block'\n      };\n      return this.props.ignoreInlineStyles ? {} : starRatingsStyle;\n    }\n  }, {\n    key: 'starGradientStyle',\n    get: function get() {\n      var starGradientStyle = {\n        position: 'absolute',\n        zIndex: '0',\n        width: '0',\n        height: '0',\n        visibility: 'hidden'\n      };\n      return this.props.ignoreInlineStyles ? {} : starGradientStyle;\n    }\n  }, {\n    key: 'titleText',\n    get: function get() {\n      var _props2 = this.props,\n          typeOfWidget = _props2.typeOfWidget,\n          selectedRating = _props2.rating;\n\n      var hoveredRating = this.state.highestStarHovered;\n      var currentRating = hoveredRating > 0 ? hoveredRating : selectedRating;\n      // fix it at 2 decimal places and remove trailing 0s\n      var formattedRating = parseFloat(currentRating.toFixed(2)).toString();\n      if (Number.isInteger(currentRating)) {\n        formattedRating = String(currentRating);\n      }\n      var starText = typeOfWidget + 's';\n      if (formattedRating === '1') {\n        starText = typeOfWidget;\n      }\n      return formattedRating + ' ' + starText;\n    }\n  }, {\n    key: 'offsetValue',\n    get: function get() {\n      var rating = this.props.rating;\n      var ratingIsInteger = Number.isInteger(rating);\n      var offsetValue = '0%';\n      if (!ratingIsInteger) {\n        var firstTwoDecimals = rating.toFixed(2).split('.')[1].slice(0, 2);\n        offsetValue = firstTwoDecimals + '%';\n      }\n      return offsetValue;\n    }\n  }, {\n    key: 'renderStars',\n    get: function get() {\n      var _this2 = this;\n\n      var _props3 = this.props,\n          changeRating = _props3.changeRating,\n          selectedRating = _props3.rating,\n          numberOfStars = _props3.numberOfStars,\n          starDimension = _props3.starDimension,\n          starSpacing = _props3.starSpacing,\n          starRatedColor = _props3.starRatedColor,\n          starEmptyColor = _props3.starEmptyColor,\n          starHoverColor = _props3.starHoverColor,\n          gradientPathName = _props3.gradientPathName,\n          ignoreInlineStyles = _props3.ignoreInlineStyles,\n          svgIconPath = _props3.svgIconPath,\n          svgIconViewBox = _props3.svgIconViewBox,\n          name = _props3.name;\n      var highestStarHovered = this.state.highestStarHovered;\n\n\n      var numberOfStarsArray = Array.apply(null, Array(numberOfStars));\n\n      return numberOfStarsArray.map(function (_, index) {\n        var starRating = index + 1;\n        var isStarred = starRating <= selectedRating;\n\n        // hovered only matters when changeRating is true\n        var hoverMode = highestStarHovered > 0;\n        var isHovered = starRating <= highestStarHovered;\n        var isCurrentHoveredStar = starRating === highestStarHovered;\n\n        // only matters when changeRating is false\n        // given star 5 and rating 4.2:  5 > 4.2 && 4 < 4.2;\n        var isPartiallyFullStar = starRating > selectedRating && starRating - 1 < selectedRating;\n\n        var isFirstStar = starRating === 1;\n        var isLastStar = starRating === numberOfStars;\n\n        return _react2.default.createElement(_star2.default, {\n          key: starRating,\n          fillId: _this2.fillId,\n          changeRating: changeRating ? function () {\n            return changeRating(starRating, name);\n          } : null,\n          hoverOverStar: changeRating ? _this2.hoverOverStar(starRating) : null,\n          unHoverOverStar: changeRating ? _this2.unHoverOverStar : null,\n          isStarred: isStarred,\n          isPartiallyFullStar: isPartiallyFullStar,\n          isHovered: isHovered,\n          hoverMode: hoverMode,\n          isCurrentHoveredStar: isCurrentHoveredStar,\n          isFirstStar: isFirstStar,\n          isLastStar: isLastStar,\n          starDimension: starDimension,\n          starSpacing: starSpacing,\n          starHoverColor: starHoverColor,\n          starRatedColor: starRatedColor,\n          starEmptyColor: starEmptyColor,\n          gradientPathName: gradientPathName,\n          ignoreInlineStyles: ignoreInlineStyles,\n          svgIconPath: svgIconPath,\n          svgIconViewBox: svgIconViewBox\n        });\n      });\n    }\n  }]);\n\n  return StarRatings;\n}(_react2.default.Component);\n\nStarRatings.propTypes = {\n  rating: _propTypes2.default.number.isRequired,\n  numberOfStars: _propTypes2.default.number.isRequired,\n  changeRating: _propTypes2.default.func,\n  starHoverColor: _propTypes2.default.string.isRequired,\n  starRatedColor: _propTypes2.default.string.isRequired,\n  starEmptyColor: _propTypes2.default.string.isRequired,\n  starDimension: _propTypes2.default.string.isRequired,\n  starSpacing: _propTypes2.default.string.isRequired,\n  gradientPathName: _propTypes2.default.string.isRequired,\n  ignoreInlineStyles: _propTypes2.default.bool.isRequired,\n  svgIconPath: _propTypes2.default.string.isRequired,\n  svgIconViewBox: _propTypes2.default.string.isRequired,\n  name: _propTypes2.default.string\n};\n\nStarRatings.defaultProps = {\n  rating: 0,\n  typeOfWidget: 'Star',\n  numberOfStars: 5,\n  changeRating: null,\n  starHoverColor: 'rgb(230, 67, 47)',\n  starRatedColor: 'rgb(109, 122, 130)',\n  starEmptyColor: 'rgb(203, 211, 227)',\n  starDimension: '50px',\n  starSpacing: '7px',\n  gradientPathName: '',\n  ignoreInlineStyles: false,\n  svgIconPath: 'm25,1 6,17h18l-14,11 5,17-15-10-15,10 5-17-14-11h18z',\n  svgIconViewBox: '0 0 51 48'\n};\n\nexports.default = StarRatings;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Star = function (_React$Component) {\n  _inherits(Star, _React$Component);\n\n  function Star() {\n    _classCallCheck(this, Star);\n\n    return _possibleConstructorReturn(this, (Star.__proto__ || Object.getPrototypeOf(Star)).apply(this, arguments));\n  }\n\n  _createClass(Star, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          changeRating = _props.changeRating,\n          hoverOverStar = _props.hoverOverStar,\n          unHoverOverStar = _props.unHoverOverStar,\n          svgIconViewBox = _props.svgIconViewBox,\n          svgIconPath = _props.svgIconPath;\n\n      return _react2.default.createElement(\n        'div',\n        {\n          className: 'star-container',\n          style: this.starContainerStyle,\n          onMouseEnter: hoverOverStar,\n          onMouseLeave: unHoverOverStar,\n          onClick: changeRating\n        },\n        _react2.default.createElement(\n          'svg',\n          {\n            viewBox: svgIconViewBox,\n            className: this.starClasses,\n            style: this.starSvgStyle\n          },\n          _react2.default.createElement('path', {\n            className: 'star',\n            style: this.pathStyle,\n            d: svgIconPath\n          })\n        )\n      );\n    }\n  }, {\n    key: 'starContainerStyle',\n    get: function get() {\n      var _props2 = this.props,\n          changeRating = _props2.changeRating,\n          starSpacing = _props2.starSpacing,\n          isFirstStar = _props2.isFirstStar,\n          isLastStar = _props2.isLastStar,\n          ignoreInlineStyles = _props2.ignoreInlineStyles;\n\n\n      var starContainerStyle = {\n        position: 'relative',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        paddingLeft: isFirstStar ? undefined : starSpacing,\n        paddingRight: isLastStar ? undefined : starSpacing,\n        cursor: changeRating ? 'pointer' : undefined\n      };\n      return ignoreInlineStyles ? {} : starContainerStyle;\n    }\n  }, {\n    key: 'starSvgStyle',\n    get: function get() {\n      var _props3 = this.props,\n          ignoreInlineStyles = _props3.ignoreInlineStyles,\n          isCurrentHoveredStar = _props3.isCurrentHoveredStar,\n          starDimension = _props3.starDimension;\n\n      var starSvgStyle = {\n        width: starDimension,\n        height: starDimension,\n        transition: 'transform .2s ease-in-out',\n        transform: isCurrentHoveredStar ? 'scale(1.1)' : undefined\n      };\n\n      return ignoreInlineStyles ? {} : starSvgStyle;\n    }\n  }, {\n    key: 'pathStyle',\n    get: function get() {\n      var _props4 = this.props,\n          isStarred = _props4.isStarred,\n          isPartiallyFullStar = _props4.isPartiallyFullStar,\n          isHovered = _props4.isHovered,\n          hoverMode = _props4.hoverMode,\n          starEmptyColor = _props4.starEmptyColor,\n          starRatedColor = _props4.starRatedColor,\n          starHoverColor = _props4.starHoverColor,\n          gradientPathName = _props4.gradientPathName,\n          fillId = _props4.fillId,\n          ignoreInlineStyles = _props4.ignoreInlineStyles;\n\n\n      var fill = void 0;\n      if (hoverMode) {\n        if (isHovered) fill = starHoverColor;else fill = starEmptyColor;\n      } else {\n        if (isPartiallyFullStar) fill = 'url(\\'' + gradientPathName + '#' + fillId + '\\')';else if (isStarred) fill = starRatedColor;else fill = starEmptyColor;\n      }\n\n      var pathStyle = {\n        fill: fill,\n        transition: 'fill .2s ease-in-out'\n      };\n\n      return ignoreInlineStyles ? {} : pathStyle;\n    }\n  }, {\n    key: 'starClasses',\n    get: function get() {\n      var _props5 = this.props,\n          isSelected = _props5.isSelected,\n          isPartiallyFullStar = _props5.isPartiallyFullStar,\n          isHovered = _props5.isHovered,\n          isCurrentHoveredStar = _props5.isCurrentHoveredStar,\n          ignoreInlineStyles = _props5.ignoreInlineStyles;\n\n\n      var starClasses = (0, _classnames2.default)({\n        'widget-svg': true,\n        'widget-selected': isSelected,\n        'multi-widget-selected': isPartiallyFullStar,\n        'hovered': isHovered,\n        'current-hovered': isCurrentHoveredStar\n      });\n\n      return ignoreInlineStyles ? {} : starClasses;\n    }\n  }]);\n\n  return Star;\n}(_react2.default.Component);\n\nStar.propTypes = {\n  fillId: _propTypes2.default.string.isRequired,\n  changeRating: _propTypes2.default.func,\n  hoverOverStar: _propTypes2.default.func,\n  unHoverOverStar: _propTypes2.default.func,\n  isStarred: _propTypes2.default.bool.isRequired,\n  isPartiallyFullStar: _propTypes2.default.bool.isRequired,\n  isHovered: _propTypes2.default.bool.isRequired,\n  hoverMode: _propTypes2.default.bool.isRequired,\n  isCurrentHoveredStar: _propTypes2.default.bool.isRequired,\n  isFirstStar: _propTypes2.default.bool.isRequired,\n  isLastStar: _propTypes2.default.bool.isRequired,\n  starDimension: _propTypes2.default.string.isRequired,\n  starSpacing: _propTypes2.default.string.isRequired,\n  starHoverColor: _propTypes2.default.string.isRequired,\n  starRatedColor: _propTypes2.default.string.isRequired,\n  starEmptyColor: _propTypes2.default.string.isRequired,\n  gradientPathName: _propTypes2.default.string.isRequired,\n  ignoreInlineStyles: _propTypes2.default.bool.isRequired,\n  svgIconPath: _propTypes2.default.string.isRequired,\n  svgIconViewBox: _propTypes2.default.string.isRequired\n};\n\nexports.default = Star;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { CBadge, CCard, CCardBody, CCol, CDataTable, CCollapse, CRow, CButton } from \"@coreui/react\";\r\nimport { QUESTIONS, RATINGS } from 'utils/constants/constant'\r\nimport colors from 'assets/theme/colors';\r\nimport { NoData } from 'reusable';\r\nconst PerformanceReview = ({ reviews = [] }) => {\r\n    const fields = [\r\n        { key: 'month_reviewed', label: \"Month\", _style: { width: '10%', textAlign: 'center' } },\r\n        { key: 'c1', label: QUESTIONS[0] },\r\n        { key: 'c2', label: QUESTIONS[1] },\r\n        { key: 'c3', label: QUESTIONS[2] },\r\n        { key: 'c4', label: QUESTIONS[3] },\r\n        { key: 'c5', label: QUESTIONS[4] },\r\n        { key: 'reviewer', label: 'Reviewer', _style: { width: '10%', textAlign: 'center' } },\r\n    ]\r\n\r\n    const renderRating = rating => {\r\n        if (rating) {\r\n            let arr = new Array(rating).fill(\"x\")\r\n            return (<td >\r\n                {arr.map((i, idx) => {\r\n                    return <span key={idx} style={{ color: colors.$orange, fontSize: 20 }}> &#9733;</span>\r\n                })}\r\n                <p>{RATINGS[rating.toString()]}</p>\r\n\r\n            </td>)\r\n        }\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xl={12}>\r\n                <CCard>\r\n                    <CCardBody>\r\n                        <CDataTable\r\n                            items={reviews}\r\n                            fields={fields}\r\n                            itemsPerPageSelect\r\n                            itemsPerPage={12}\r\n                            hover\r\n                            pagination\r\n                            noItemsViewSlot={<NoData title=\"No Reviews\" />}\r\n                            scopedSlots={{\r\n                                month_reviewed: item => {\r\n                                    return <td>\r\n                                            <span style={{ whiteSpace: 'pre-line', fontSize: 20 }}>{'\\n'}</span>\r\n                                            <p>{item.month_reviewed}</p>\r\n                                        </td>\r\n                                },\r\n                                c1: item => {\r\n                                    return renderRating(item.criteria_1)\r\n                                },\r\n                                c2: item => {\r\n                                    return renderRating(item.criteria_2)\r\n                                },\r\n                                c3: item => {\r\n                                    return renderRating(item.criteria_3)\r\n                                },\r\n                                c4: item => {\r\n                                    return renderRating(item.criteria_4)\r\n                                },\r\n                                c5: item => {\r\n                                    return renderRating(item.criteria_5)\r\n                                },\r\n                                reviewer: item => {\r\n                                    return <td>\r\n                                            <span style={{ whiteSpace: 'pre-line', fontSize: 20 }}>{'\\n'}</span>\r\n                                            <p>{item.reviewer}</p>\r\n                                        </td>\r\n                                },\r\n\r\n                            }}\r\n                        />\r\n                    </CCardBody>\r\n                </CCard>\r\n            </CCol>\r\n        </CRow >\r\n    )\r\n}\r\n\r\nexport default PerformanceReview\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { CCardBody, CCol, CCarouselInner, CCarouselControl, CCarouselItem, CCarousel, CRow, CButton } from \"@coreui/react\";\r\nimport StarRatings from 'react-star-ratings';\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport { copyArray } from 'utils/helpers';\r\nimport { RATINGS } from 'utils/constants/constant'\r\nconst Questions = ({ rating, setRating, activeIndex, setActiveIndex, QUESTIONS }) => {\r\n\r\n\r\n  const setNewRating = (rate, idx) => {\r\n    let arr = copyArray(rating)\r\n    arr[idx] = rate;\r\n    setRating(arr)\r\n  }\r\n\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xl={12}>\r\n        <CCardBody >\r\n          <CCarousel activeIndex={activeIndex} onSlideChange={(e) => {\r\n            setActiveIndex(e)\r\n          }}>\r\n            <CCarouselInner>\r\n              {\r\n                QUESTIONS.map((element, index) => {\r\n                  return (\r\n                    <CCarouselItem key={index}>\r\n                      <center>\r\n                        <h5>{`${index + 1}.) ${element}`}</h5>\r\n                        <StarRatings\r\n                          key={index}\r\n                          rating={rating[index]}\r\n                          starRatedColor=\"primary\"\r\n                          starDimension=\"25px\"\r\n                          numberOfStars={5}\r\n                          changeRating={(rate) => {\r\n                            setNewRating(rate, index)\r\n                          }}\r\n                          name='rating'\r\n                        />\r\n                        <br></br>\r\n                        <h5>\r\n                          {\r\n                            RATINGS[(\"\" + rating[index])]\r\n                          }\r\n                        </h5>\r\n                      </center>\r\n                    </CCarouselItem>\r\n                  )\r\n                })\r\n              }\r\n            </CCarouselInner>\r\n            <CCarouselControl direction=\"prev\" className=\"mt-5\" >\r\n              <CButton>\r\n                <CIcon size={\"sm\"} color=\"primary\" name={\"cil-chevron-left\"} />\r\n              </CButton>\r\n            </CCarouselControl>\r\n            <CCarouselControl direction=\"next\" className=\"mt-5\" >\r\n              <CButton>\r\n                <CIcon size={\"sm\"} color=\"primary\" name={\"cil-chevron-right\"} />\r\n              </CButton>\r\n            </CCarouselControl>\r\n          </CCarousel>\r\n        </CCardBody>\r\n      </CCol>\r\n    </CRow >\r\n  )\r\n}\r\n\r\nexport default Questions\r\n","export default {\r\n  c1: null,\r\n  c2: null,\r\n  c3: null,\r\n  c4: null,\r\n  c5: null,\r\n  employee_reviewed: null,\r\n  reviewer: null\r\n}\r\n\r\nexport class PerformanceReview {\r\n  constructor(c1, c2, c3, c4, c5, employee_reviewed, reviewer) {\r\n    this.c1 = c1\r\n    this.c2 = c2\r\n    this.c3 = c3\r\n    this.c4 = c4\r\n    this.c5 = c5\r\n    this.employee_reviewed = employee_reviewed\r\n    this.reviewer = reviewer\r\n  }\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { CButton } from \"@coreui/react\";\r\nimport { Modal } from 'reusable'\r\nimport Questions from './component/Questions'\r\nimport { QUESTIONS } from \"utils/constants/constant\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { actionCreator, ActionTypes } from 'utils/actions';\r\nimport PerformanceReviewModel from 'models/PerformanceReviewModel'\r\nimport api from \"utils/api\"\r\nimport { dispatchNotification } from 'utils/helpers'\r\nimport { LoadingButton } from 'reusable'\r\n\r\nconst PerformanceReviewModal = ({ user }) => {\r\n  const reviewer = useSelector(state => {\r\n    let authed = state.appState.auth.user;\r\n    return {\r\n      firstname: authed.firstname,\r\n      lastname: authed.lastname,\r\n      employeeId: authed.employeeId,\r\n      userId: authed.userId\r\n    }\r\n  })\r\n\r\n  const [rating, setRating] = useState(\r\n    [0, 0, 0, 0, 0]\r\n  )\r\n\r\n  const [review, setReview] = useState(PerformanceReviewModel)\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n  const [isLoading, toggleIsLoading] = useState(false)\r\n\r\n  PerformanceReviewModel.reviewer = reviewer.employeeId;\r\n  PerformanceReviewModel.employee_reviewed = user.employeeId\r\n  PerformanceReviewModel.c1 = rating[0]\r\n  PerformanceReviewModel.c2 = rating[1]\r\n  PerformanceReviewModel.c3 = rating[2]\r\n  PerformanceReviewModel.c4 = rating[3]\r\n  PerformanceReviewModel.c5 = rating[4]\r\n\r\n  const dispatch = useDispatch();\r\n  const modal = useRef();\r\n\r\n  const toggleModal = () => {\r\n    modal.current.toggle();\r\n    \r\n    setRating([0, 0, 0, 0, 0])\r\n    setReview(PerformanceReviewModel)\r\n    setActiveIndex(0)\r\n  };\r\n\r\n  const submitReview = async () => {\r\n    toggleIsLoading(true)\r\n    dispatchNotification(dispatch, { type: 'info', message: \"Please wait\" })\r\n    let res = await api.post(\"/create_performance_review\", review)\r\n    if (!res.error) {\r\n      dispatchNotification(dispatch, { type: 'success', message: 'Success' })\r\n      dispatch(actionCreator(ActionTypes.ADD_PERFORMANCE_REVIEW, res.data.performance_review_information[0]))\r\n    } else {\r\n      dispatchNotification(dispatch, { type: 'error', message: res.message })\r\n    }\r\n    toggleModal()\r\n    toggleIsLoading(false)\r\n  }\r\n  const validate = () => {\r\n    if (!rating.includes(0)) {\r\n      submitReview()\r\n    } else {\r\n      dispatchNotification(dispatch, { type: 'error', message: \"Please add some review\" })\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <Modal\r\n      ref={modal}\r\n      centered\r\n      btnTitle=\"Add Perforrmance Review\"\r\n      title={`${user.firstname} ${user.lastname}`}\r\n      modalOnClose={toggleModal}\r\n      footer={\r\n        <>\r\n          <LoadingButton {...{ isLoading, submit: validate, btnText: 'Submit' }} />\r\n          <CButton color=\"danger\" onClick={() => {\r\n            toggleModal()\r\n          }} >Cancel</CButton>\r\n        </>\r\n      }\r\n      hideCancelButton\r\n    >\r\n      <Questions {...{ rating, setRating, activeIndex, setActiveIndex, QUESTIONS }} />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default PerformanceReviewModal\r\n"],"sourceRoot":""}