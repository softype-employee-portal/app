{"version":3,"sources":["modules/departments/component/DepartmentDetailsModal.js","modules/departments/component/DepartmentDetails.js"],"names":["DepartmentDetailsModal","deptEmp","firstElementDept","action","method","name","value","department_name","placeholder","className","DepartmentDetails","location","modal","useRef","user","useSelector","state","authed","appState","auth","firstname","lastname","employeeId","userId","accountType","query","URLSearchParams","search","useState","get","id","stateEmployeeDepartment","department_employee","department_employees","filter","emp","department_id","toString","stateEmployeeManagers","department_manager","department_managers","mang","deptEmpMang","_","first","isLoading","toggleModal","current","toggle","ref","centered","title","hidden","modalOnClose","closeButton","footer","color","disabled","size","onClick","hideCancelButton","sm","lg","style","minHeight","console","log","department_head","key","map","el","idx","idxEmp","department_managerId","managerId","manager_firstname","manager_lastname"],"mappings":"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","file":"static/js/26.9966b0cd.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { CCol, CInput, CForm, CRow,CLabel ,CFormGroup ,CFormText } from \"@coreui/react\";\r\nimport _ from 'lodash';\r\nimport { Modal, ConfirmDialog } from 'reusable';\r\n\r\n\r\nconst DepartmentDetailsModal = ({ deptEmp, firstElementDept }) => {\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol>\r\n          <CForm action=\"\" method=\"post\" >\r\n            <CFormGroup>\r\n              <CLabel>Department Name</CLabel>\r\n              <CInput\r\n                // onChange={handleOnChange}\r\n                name=\"department_name\"\r\n                value={firstElementDept.department_name || \"\"}\r\n                placeholder={firstElementDept.department_name}\r\n              />\r\n              <CFormText className=\"help-block\">Please enter your Department Name</CFormText>\r\n            </CFormGroup>\r\n          </CForm>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DepartmentDetailsModal\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { CCardBody, CCol, CCardHeader, CRow, CButton, CCard, CSpinner } from \"@coreui/react\";\r\nimport _ from 'lodash';\r\nimport { Modal, ConfirmDialog } from 'reusable';\r\nimport DepartmentDetailsModal from 'modules/departments/component/DepartmentDetailsModal'\r\n\r\nconst DepartmentDetails = ({ location }) => {\r\n\r\n  const modal = useRef();\r\n\r\n  const user = useSelector(state => {\r\n    let authed = state.appState.auth.user;\r\n    return {\r\n      firstname: authed.firstname,\r\n      lastname: authed.lastname,\r\n      employeeId: authed.employeeId,\r\n      userId: authed.userId,\r\n      accountType: authed.accountType\r\n    }\r\n  })\r\n\r\n  const query = new URLSearchParams(location.search);\r\n\r\n  const [id, setId] = useState(query.get('aqs'))\r\n\r\n  const stateEmployeeDepartment = useSelector((state) => { // not yet\r\n    return state.appState.department_employee.department_employees.filter(emp => {\r\n      return emp.department_id.toString() === id.toString()\r\n    })\r\n  });\r\n\r\n  const stateEmployeeManagers = useSelector(state => {\r\n    return state.appState.department_manager.department_managers.filter(mang => {\r\n      return mang.department_id.toString() === id.toString()\r\n    })\r\n  })\r\n\r\n  const [deptEmp, setDeptEmp] = useState(stateEmployeeDepartment)\r\n  const [deptEmpMang, setDeptEmpMang] = useState(stateEmployeeManagers)\r\n  const [firstElementDept, setFirstElementDept] = useState(_.first(stateEmployeeDepartment))\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  // console.log(deptEmp, \"dept emp\")\r\n  // console.log(deptEmpMang, \"dept mang\")\r\n\r\n  const toggleModal = () => {\r\n    // setData(DepartmentManager)\r\n    // setError(defaultErrors)\r\n    modal.current.toggle();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <Modal\r\n          ref={modal}\r\n          centered\r\n          title=\"Update Department Details\"\r\n          hidden\r\n          modalOnClose={toggleModal}\r\n          closeButton\r\n          footer={\r\n            <>\r\n              <CButton color=\"primary\" disabled={isLoading}>\r\n                {\r\n                  isLoading ? <CSpinner color=\"secondary\" size=\"sm\" /> : 'Submit'\r\n                }\r\n              </CButton>\r\n              <CButton color=\"danger\" onClick={toggleModal}>Cancel</CButton>\r\n            </>\r\n          }\r\n          hideCancelButton\r\n        >\r\n          <DepartmentDetailsModal {...{ deptEmp, firstElementDept }} />\r\n        </Modal>\r\n\r\n        <CCol sm=\"2\" lg=\"3\" >\r\n\r\n        </CCol>\r\n        <CCol>\r\n          <CCard style={{ minHeight: \"200px\" }}>\r\n            <CCardHeader>\r\n              <CRow>\r\n                <CCol sm=\"8\">\r\n                  <div>\r\n                    <h4>\r\n                      {`Department Name: ${firstElementDept.department_name}`}\r\n                    </h4>\r\n                  </div>\r\n                </CCol>\r\n                {\r\n                  user.accountType === 1 ?\r\n                    <CCol sm=\"4\" className=\"d-none d-md-block\">\r\n                      <div className=\"float-right\">\r\n                        <CButton color=\"primary\" onClick={() => {\r\n                          toggleModal()\r\n                          console.log(\"Test update\")\r\n                        }}>\r\n                          {\"Update Department\"}\r\n                        </CButton>\r\n                      </div>\r\n                    </CCol> : \"\"\r\n                }\r\n              </CRow>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <div className=\"px-1 py-1 text-justify\">\r\n                <h5>\r\n                  {`Department Head: ${firstElementDept.department_head}`}\r\n                </h5>\r\n                <div key={\"dept_\" + firstElementDept.department_id}>\r\n                  {\r\n                    deptEmpMang.map((el, idx) => {\r\n                      return (\r\n                        deptEmp.map((emp, idxEmp) => {\r\n                          return (\r\n                            < ul >\r\n                              {\r\n                                emp.department_managerId === el.managerId ?\r\n                                  <li key={\"mang_\" + idx}>\r\n                                    <h6 >\r\n                                      {`Department Manager/Lead: ${el.manager_firstname} ${el.manager_lastname}`}\r\n                                    </h6>\r\n                                    <div key={\"emp_\" + idxEmp}>\r\n                                      <ul>\r\n                                        <li>\r\n                                          {`${emp.firstname} ${emp.lastname}`}\r\n                                        </li>\r\n                                      </ul>\r\n                                    </div>\r\n                                  </li>\r\n                                  : \"\"\r\n                              }\r\n                            </ul>\r\n                          )\r\n                        })\r\n                      )\r\n                    })\r\n                  }\r\n                </div>\r\n              </div>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol sm=\"2\" lg=\"3\" >\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default DepartmentDetails\r\n"],"sourceRoot":""}