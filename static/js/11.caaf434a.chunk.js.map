{"version":3,"sources":["modules/profile/Profilev1.js"],"names":["ProfilePage","state","loading","src","res","logoSm","userDetails","SvgToPng","svgString","a","svg2png","input","trim","encoding","format","multiplier","quality","converted","setState","getQrCode","user","api","get","qr_code","_res","error","toString","this","props","auth","qr","Address","toCapitalize","street","city","country","Age","getAge","birthdate","Email","email","mobileno","Position","position","callback","baseUrl","config","IS_DEV","API_URL_BASE_DEV","API_URL_BASE_LIVE","fullname","firstname","middlename","lastname","className","md","profile_img","style","width","Object","entries","map","key","value","block","onClick","toggleModal","history","push","color","Component"],"mappings":"+VAQMA,E,4MACJC,MAAQ,CACNC,SAAS,EACTC,IAAKC,IAAIC,OACTC,YAAa,I,EAEfC,S,uCAAW,WAAOC,GAAP,eAAAC,EAAA,sEACaC,kBAAQ,CAC5BC,MAAOH,EAAUI,OACjBC,SAAU,UACVC,OAAQ,MACRC,WAAY,EACZC,QAAS,IANF,OACLC,EADK,OAQT,EAAKC,SAAS,CAAEf,IAAKc,IARZ,2C,wDAUXE,U,uCAAY,WAAOC,GAAP,eAAAX,EAAA,+EAESY,IAAIC,IAAJ,iBAAkBF,EAAKG,UAFhC,QAEJC,EAFI,QAGEC,OACR,EAAKlB,SAASiB,EAAKE,YAJb,yEAOD,SAPC,yD,wHAUS,IACbN,EAASO,KAAKC,MAAMC,KAApBT,KACFU,EAAKH,KAAKR,UAAUC,GACxBO,KAAKT,SAAS,CAAEhB,SAAS,IACd,UAAP4B,GACFH,KAAKT,SAAS,CACZZ,YAAa,CACXyB,QAAQ,GAAD,OAAKC,YAAaZ,EAAKa,QAAvB,YAAkCD,YACvCZ,EAAKc,MADA,YAEFF,YAAaZ,EAAKe,UACvBC,IAAKC,YAAOjB,EAAKkB,WACjBC,MAAOnB,EAAKoB,MACZ,gBAAiBpB,EAAKqB,SACtBC,SAAUtB,EAAKuB,c,6CAMrBhB,KAAKT,SAAW,SAACjB,EAAO2C,O,+BAKhB,IAAD,OACDxB,EAASO,KAAKC,MAAMC,KAApBT,KADC,EAE6BO,KAAK1B,MAArBK,GAFb,EAEDJ,QAFC,EAEQC,IAFR,EAEaG,aAChBuC,EAAO,UAAOC,IAAOC,OAAoCD,IAAOE,iBAAlCF,IAAOG,kBAA9B,gBACPC,EAAQ,UAAMlB,YAAaZ,EAAK+B,WAAxB,YACV/B,EAAKgC,YAAcpB,YAAaZ,EAAKgC,YAAc,KADzC,OAEPpB,YAAaZ,EAAKiC,WACvB,OACE,oCACE,kBAAC,KAAD,CAAMC,UAAU,0BACd,kBAAC,IAAD,CAAMC,GAAI,IACR,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAMA,GAAI,EAAGD,UAAU,0BACrB,kBAAC,IAAD,CACEnD,IAAKiB,EAAKoC,YAAL,UAAsBX,EAAtB,YAAiCzB,EAAKoC,aAAgBpD,IAAIC,OAC/DoD,MAAO,CACLC,MAAO,QAETJ,UAAU,UAGd,kBAAC,IAAD,CAAMC,GAAI,GACR,oCACQ,IACLL,GAEFS,OAAOC,QAAQtD,GAAauD,KAAI,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXC,EAAW,KACjD,OACE,wBAAID,IAAKA,GACNA,EADH,MACWC,MAIf,kBAAC,IAAD,CACEC,OAAK,EACLV,UAAU,YACVW,QAAS,WACP,EAAKrC,MAAMsC,cACX,EAAKtC,MAAMuC,QAAQC,KAAK,eAE1BC,MAAM,WAEL,mB,GA5FOC,aAwGXtE","file":"static/js/11.caaf434a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport api from \"utils/api\";\r\nimport { CButton, CCol, CRow, CImg } from \"@coreui/react\";\r\nimport { toCapitalize, getAge } from \"utils/helpers\";\r\nimport res from \"assets/img\";\r\nimport { config } from 'utils/config'\r\nimport { svg2png } from \"svg-png-converter\";\r\n\r\nclass ProfilePage extends Component {\r\n  state = {\r\n    loading: true,\r\n    src: res.logoSm,\r\n    userDetails: {},\r\n  };\r\n  SvgToPng = async (svgString) => {\r\n    let converted = await svg2png({\r\n      input: svgString.trim(),\r\n      encoding: \"dataURL\",\r\n      format: \"png\",\r\n      multiplier: 1,\r\n      quality: 1,\r\n    });\r\n    this.setState({ src: converted });\r\n  };\r\n  getQrCode = async (user) => {\r\n    try {\r\n      let _res = await api.get(`/image/${user.qr_code}`);\r\n      if (!_res.error) {\r\n        this.SvgToPng(_res.toString());\r\n      }\r\n    } catch (error) {\r\n      return \"error\";\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    let { user } = this.props.auth;\r\n    let qr = this.getQrCode(user);\r\n    this.setState({ loading: false });\r\n    if (qr !== \"error\") {\r\n      this.setState({\r\n        userDetails: {\r\n          Address: `${toCapitalize(user.street)} ${toCapitalize(\r\n            user.city\r\n          )} ${toCapitalize(user.country)}`,\r\n          Age: getAge(user.birthdate),\r\n          Email: user.email,\r\n          \"Mobile Number\": user.mobileno,\r\n          Position: user.position,\r\n        },\r\n      });\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this.setState = (state, callback) => {\r\n      return;\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let { user } = this.props.auth;\r\n    let { loading, src, userDetails } = this.state;\r\n    let baseUrl = `${!config.IS_DEV ? config.API_URL_BASE_LIVE : config.API_URL_BASE_DEV}/file/images`\r\n    let fullname = `${toCapitalize(user.firstname)} ${\r\n      user.middlename && toCapitalize(user.middlename) + \" \"\r\n      }${toCapitalize(user.lastname)}`\r\n    return (\r\n      <>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol md={10}>\r\n            <CRow>\r\n              <CCol md={4} className=\"justify-content-center\">\r\n                <CImg\r\n                  src={user.profile_img ? `${baseUrl}/${user.profile_img}` : res.logoSm}\r\n                  style={{\r\n                    width: '100%',\r\n                  }}\r\n                  className=\"mb-2\"\r\n                />\r\n              </CCol>\r\n              <CCol md={7}>\r\n                <h3>\r\n                  Name:{\" \"}\r\n                  {fullname}\r\n                </h3>\r\n                {Object.entries(userDetails).map(([key, value]) => {\r\n                  return (\r\n                    <h6 key={key}>\r\n                      {key} : {value}\r\n                    </h6>\r\n                  );\r\n                })}\r\n                <CButton\r\n                  block\r\n                  className=\"mr-5 px-4\"\r\n                  onClick={() => {\r\n                    this.props.toggleModal()\r\n                    this.props.history.push(\"/myAccount\");\r\n                  }}\r\n                  color=\"primary\"\r\n                >\r\n                  {\"Update\"}\r\n                </CButton>\r\n              </CCol>\r\n\r\n            </CRow>\r\n          </CCol>\r\n        </CRow>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfilePage;\r\n"],"sourceRoot":""}