{"version":3,"sources":["modules/leave-management/LeaveRequest.js"],"names":["Calendar","lazy","LeaveRequest","match","dispatch","useDispatch","_request","useSelector","state","appState","leave","leave_requests","filter","el","id","toString","params","user","auth","useState","response","setResponse","isCancel","setIsCancel","dialog","useRef","Object","keys","length","request","shallowCopy","insertProperty","getDuration","event","start","Date","end","title","category","leaveDetails","entries","handleClick","code","payload","approver","employeeId","status","getAdminResponse","statusCode","noOfDays","current","toggle","ref","show","onConfirm","cancelRequest","respondToRequest","lg","style","maxHeight","roleId","float","color","onClick","className","overflowY","borderBottom","map","index","key","value","toLowerCase","splitSnakeCase","splitCamelCase","minWidth","minHeight","header","right","left","height","events","clickable"],"mappings":"mLAOMA,EAAWC,gBAAK,kBAAM,uDA0HbC,UAzHM,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAChBC,EAAWC,cACXC,EAAWC,aAAY,SAAAC,GAC3B,OAAOA,EAAMC,SAASC,MAAMC,eAAeC,QAAO,SAAAC,GAChD,OAAOA,EAAGC,GAAGC,aAAeZ,EAAMa,OAAOF,GAAGC,cAC3C,MAECE,EAAOV,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASS,KAAKD,QAPpB,EAQFE,qBARE,mBAQ3BC,EAR2B,KAQjBC,EARiB,OASFF,oBAAS,GATP,mBAS3BG,EAT2B,KASjBC,EATiB,KAU5BC,EAASC,mBAEf,IAAKC,OAAOC,KAAKrB,GAAUsB,OACzB,OAAO,kBAAC,IAAD,MAET,IAAIC,EAAUC,YAAYxB,GAC1BuB,EAAUE,YAAeF,EAAS,aAAcG,YAAYH,EAAQ,aAAcA,EAAQ,YAAa,GACvG,IAAII,EAAQ,CACVC,MAAO,IAAIC,KAAKN,EAAQ,cACxBO,IAAK,IAAID,KAAKN,EAAQ,YACtBQ,MAAOR,EAAQS,UAGXC,EAAeV,EAAUH,OAAOc,QAAQX,GAAW,GAEnDY,EAAc,SAACC,GACnBnB,GAAY,GACZ,IAAIoB,EAAU,CACZ7B,GAAIe,EAAQf,GACZ8B,SAAU3B,EAAK4B,WACfC,OAAQC,YAAiBL,GACzBM,WAAYN,EACZO,SAASpB,EAAQ,cACjBgB,WAAYhB,EAAQ,gBAEtBR,EAAYsB,GACZnB,EAAO0B,QAAQC,UAqBjB,OACE,kBAAC,KAAD,KACE,kBAAC,IAAD,eACEC,IAAK5B,GACD,CACF6B,KAAM7B,EACN8B,UAbU,WAChB,OAAKhC,EAGEiC,YAAcnD,EAAUyB,EAAQf,IAF9B0C,YAAiBpD,EAAUgB,IAY9BiB,MAAQf,EAA8C,kBAA/C,UAAeF,GAAYA,EAAS0B,WAG/C,kBAAC,IAAD,CAAMW,GAAI,GACR,kBAAC,IAAD,CAAOC,MAAO,CAAEC,UAAW,MACzB,kBAAC,IAAD,2BACsBxD,EAAMa,OAAOF,GACZ,YAAnBe,EAAQiB,QAAwC,IAAhB7B,EAAK2C,QACrC,kBAAC,IAAD,CAAcF,MAAO,CAAEG,MAAO,UAC5B,kBAAC,IAAD,CAASC,MAAM,UAAUC,QAAS,WAChCtB,EAAY,IACXuB,UAAU,QAFb,UAGA,kBAAC,IAAD,CAASD,QAAS,WAChBtB,EAAY,IACXqB,MAAM,SAASE,UAAU,QAF5B,UAIE/C,EAAK4B,aAAehB,EAAQ,gBAAkB,kBAAC,IAAD,CAASkC,QAAS,WAC9DxC,GAAY,GACZC,EAAO0B,QAAQC,UACdW,MAAM,WAHqC,aAStD,kBAAC,IAAD,CAAWJ,MAAO,CAAEO,UAAW,SAC7B,2BAAOD,UAAU,qBAAqBN,MAAO,CAAEQ,aAAc,mBAC3D,+BAEI3B,EAAa4B,KAAI,WAAeC,GAAW,IAAD,mBAAvBC,EAAuB,KAAlBC,EAAkB,KACxC,MAAiB,OAARD,GAAsC,gBAAtBA,EAAIE,eAC3B,wBAAIF,IAAKD,EAAMrD,YACb,wBAAIiD,UAAU,mBAAd,eAAsCQ,YAAeC,YAAeJ,IAApE,MACA,4BACE,uBAAGL,UAAU,oBAAoBN,MAAO,CACtCgB,SAAU,SADZ,IAEKJ,EAAQ,gCAASA,GAAkB,oCAFxC,eAgBpB,kBAAC,IAAD,CAAMb,GAAI,EAAGC,MAAO,CAAEiB,UAAW,SAAWX,UAAU,kBA1EjD,kBAAChE,EAAc,CACpB4E,OAAQ,CACNC,OAAO,EACPC,MAAM,GAERpB,MAAO,CAAEqB,OAAQ,KACjBC,OAAQ,CAAC/C,GACTgD,WAAW","file":"static/js/29.42d16c7f.chunk.js","sourcesContent":["import React, { lazy, useRef, useState } from 'react'\r\nimport { CCard, CCardBody, CCardHeader, CCol, CRow, CButtonGroup, CButton } from '@coreui/react'\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { splitCamelCase, splitSnakeCase, insertProperty, shallowCopy, getAdminResponse, getDuration, dispatchNotification, respondToRequest, cancelRequest } from 'utils/helpers'\r\nimport { NoData, ConfirmDialog } from 'reusable';\r\n\r\nconst Calendar = lazy(() => import('modules/calendar/Calendar'));\r\nconst LeaveRequest = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n  const _request = useSelector(state => {\r\n    return state.appState.leave.leave_requests.filter(el => {\r\n      return el.id.toString() === match.params.id.toString()\r\n    })[0]\r\n  })\r\n  const user = useSelector(state => state.appState.auth.user)\r\n  const [response, setResponse] = useState();\r\n  const [isCancel, setIsCancel] = useState(false);\r\n  const dialog = useRef()\r\n\r\n  if (!Object.keys(_request).length) {\r\n    return <NoData />\r\n  }\r\n  let request = shallowCopy(_request);\r\n  request = insertProperty(request, 'no_of_days', getDuration(request['date from'], request['date to']), 4);\r\n  let event = {\r\n    start: new Date(request['date from']),\r\n    end: new Date(request['date to']),\r\n    title: request.category\r\n  }\r\n\r\n  const leaveDetails = request ? Object.entries(request) : []\r\n\r\n  const handleClick = (code) => {\r\n    setIsCancel(false);\r\n    let payload = {\r\n      id: request.id,\r\n      approver: user.employeeId,\r\n      status: getAdminResponse(code),\r\n      statusCode: code,\r\n      noOfDays:request['no of days'],\r\n      employeeId: request['employee id']\r\n    }\r\n    setResponse(payload);\r\n    dialog.current.toggle();\r\n  }\r\n\r\n  const renderCalendar = () => {\r\n    return <Calendar  {...{\r\n      header: {\r\n        right: false,\r\n        left: false\r\n      },\r\n      style: { height: 450 },\r\n      events: [event],\r\n      clickable: false\r\n    }} />\r\n  }\r\n  const onConfirm = () => {\r\n    if (!isCancel) {\r\n      return respondToRequest(dispatch, response)\r\n    };\r\n    return cancelRequest(dispatch, request.id);\r\n  }\r\n\r\n  return (\r\n    <CRow>\r\n      <ConfirmDialog\r\n        ref={dialog}\r\n        {...{\r\n          show: dialog,\r\n          onConfirm,\r\n          title: !isCancel ? `${response && response.status}` : 'Cancel Request?',\r\n        }}\r\n      ></ConfirmDialog>\r\n      <CCol lg={6} >\r\n        <CCard style={{ maxHeight: 500 }} >\r\n          <CCardHeader>\r\n            Leave Request ID : {match.params.id}\r\n            {(request.status === 'pending' && user.roleId !== 3) &&\r\n              <CButtonGroup style={{ float: \"right\" }}>\r\n                <CButton color=\"primary\" onClick={() => {\r\n                  handleClick(1)\r\n                }} className=\"mr-2\">Accept</CButton>\r\n                <CButton onClick={() => {\r\n                  handleClick(0)\r\n                }} color=\"danger\" className=\"mr-2\">Reject</CButton>\r\n                {\r\n                  user.employeeId === request['employee id'] && <CButton onClick={() => {\r\n                    setIsCancel(true);\r\n                    dialog.current.toggle();\r\n                  }} color=\"warning\"> Cancel</CButton>\r\n                }\r\n\r\n              </CButtonGroup>\r\n            }\r\n          </CCardHeader>\r\n          <CCardBody style={{ overflowY: 'auto', }}>\r\n            <table className=\"table table-hover \" style={{ borderBottom: \"1px solid grey\" }}>\r\n              <tbody>\r\n                {\r\n                  leaveDetails.map(([key, value], index) => {\r\n                    return ((key !== \"id\" && key.toLowerCase() !== 'employee id') &&\r\n                      <tr key={index.toString()}>\r\n                        <td className=\"text-capitalize\">  {`${splitSnakeCase(splitCamelCase(key))}:`}</td>\r\n                        <td>{\r\n                          <p className=\"wrap-content-text\" style={{\r\n                            minWidth: \"100%\"\r\n                          }}> {value ? <strong>{value}</strong> : <em>NULL</em>} </p>\r\n                        }\r\n                        </td>\r\n                      </tr>\r\n                    )\r\n                  })\r\n                }\r\n              </tbody>\r\n            </table>\r\n\r\n          </CCardBody>\r\n\r\n        </CCard>\r\n      </CCol>\r\n      <CCol lg={6} style={{ minHeight: '500px' }} className=\"d-md-down-none\">\r\n        {renderCalendar()}\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default LeaveRequest\r\n"],"sourceRoot":""}